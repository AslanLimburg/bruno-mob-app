const { Pool } = require('pg');
const bcrypt = require('bcrypt');
require('dotenv').config();

const pool = new Pool({
  host: process.env.DB_HOST,
  port: process.env.DB_PORT,
  database: process.env.DB_NAME,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD
});

async function updateRoles() {
  try {
    // 1. –û–±–Ω–æ–≤–∏–º —Ä–æ–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await pool.query(`UPDATE users SET role = 'gasfee' WHERE email = 'gasfee@brunotoken.com'`);
    console.log('‚úÖ gasfee@brunotoken.com ‚Üí —Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ "gasfee"');
    
    await pool.query(`UPDATE users SET role = 'treasury' WHERE email = 'treasury@brunotoken.com'`);
    console.log('‚úÖ treasury@brunotoken.com ‚Üí —Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ "treasury"');
    
    // 2. –°–æ–∑–¥–∞–¥–∏–º admin –∏ super-admin
    const password = 'Admin123!'; // –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å - –ò–ó–ú–ï–ù–ò–¢–ï –ü–û–¢–û–ú!
    const hashedPassword = await bcrypt.hash(password, 10);
    
    // Admin
    await pool.query(`
      INSERT INTO users (email, password_hash, name, email_verified, role, account_status, brt_balance)
      VALUES ($1, $2, $3, $4, $5, $6, $7)
      ON CONFLICT (email) DO UPDATE SET role = EXCLUDED.role
    `, ['admin@brunotoken.com', hashedPassword, 'Admin', true, 'admin', 'active', 0]);
    console.log('‚úÖ admin@brunotoken.com —Å–æ–∑–¥–∞–Ω | –ü–∞—Ä–æ–ª—å: Admin123!');
    
    // Super Admin
    await pool.query(`
      INSERT INTO users (email, password_hash, name, email_verified, role, account_status, brt_balance)
      VALUES ($1, $2, $3, $4, $5, $6, $7)
      ON CONFLICT (email) DO UPDATE SET role = EXCLUDED.role
    `, ['super-admin@brunotoken.com', hashedPassword, 'Super Admin', true, 'super-admin', 'active', 0]);
    console.log('‚úÖ super-admin@brunotoken.com —Å–æ–∑–¥–∞–Ω | –ü–∞—Ä–æ–ª—å: Admin123!');
    
    console.log('\nüìä –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ó–£–õ–¨–¢–ê–¢:\n');
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = await pool.query(`
      SELECT email, role, brt_balance 
      FROM users 
      WHERE email IN ('gasfee@brunotoken.com', 'treasury@brunotoken.com', 'admin@brunotoken.com', 'super-admin@brunotoken.com')
      ORDER BY email
    `);
    
    result.rows.forEach(user => {
      console.log(`üë§ ${user.email.padEnd(35)} | –†–æ–ª—å: ${user.role.padEnd(12)} | BRT: ${user.brt_balance}`);
    });
    
    console.log('\n‚úÖ –í–°–Å –ì–û–¢–û–í–û!\n');
    console.log('üîê –ü–∞—Ä–æ–ª—å –¥–ª—è admin –∏ super-admin: Admin123!');
    console.log('‚ö†Ô∏è  –ò–ó–ú–ï–ù–ò–¢–ï –≠–¢–ò –ü–ê–†–û–õ–ò –ü–û–°–õ–ï –ü–ï–†–í–û–ì–û –í–•–û–î–ê!\n');
    
    await pool.end();
    process.exit(0);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', err.message);
    process.exit(1);
  }
}

updateRoles();
