const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  host: process.env.DB_HOST,
  port: process.env.DB_PORT,
  database: process.env.DB_NAME,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD
});

async function checkUsers() {
  try {
    console.log('\nüîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ:', process.env.DB_NAME);
    
    const result = await pool.query(`
      SELECT id, email, role, created_at, balances
      FROM users 
      ORDER BY created_at DESC
    `);
    
    console.log('\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó');
    console.log('‚ïë         üìä –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –í –ë–ê–ó–ï –î–ê–ù–ù–´–•         ‚ïë');
    console.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n');
    
    if (result.rows.length === 0) {
      console.log('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ü–£–°–¢–ê! –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n');
    } else {
      result.rows.forEach((user, index) => {
        console.log(`\n${index + 1}. üë§ ${user.email}`);
        console.log(`   ID: ${user.id}`);
        console.log(`   –†–æ–ª—å: ${user.role || 'user'}`);
        console.log(`   –°–æ–∑–¥–∞–Ω: ${user.created_at}`);
        console.log(`   –ë–∞–ª–∞–Ω—Å—ã: ${JSON.stringify(user.balances || {}, null, 2)}`);
        console.log('   ' + '‚îÄ'.repeat(50));
      });
      
      console.log(`\n‚úÖ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${result.rows.length}\n`);
    }
    
    await pool.end();
    process.exit(0);
  } catch (err) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', err.message);
    console.error('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ .env!\n');
    process.exit(1);
  }
}

checkUsers();
